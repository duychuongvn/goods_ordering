entity User {
	id Long required
}
entity Order {
	id Long required
	paymentCode String required
    orderDate ZonedDateTime
    status OrderStatus required
    deliveryStatus DeliveryStatus
    exchangeRateId String required
    exchangeRate BigDecimal
    totalJpyPrice BigDecimal
    deliveryFeeVnd BigDecimal
    totalPayVnd BigDecimal
    depositedVnd BigDecimal
    paidVnd BigDecimal
    packingDate LocalDate
    estimatedDeliverDate LocalDate
    deliveredDate LocalDate
    finishPaymentTime ZonedDateTime
    remark String
    address1 String
    address2 String
    phone1 String
    phone2 String
    email String
    zipCode String
    city String
    district String
    createdAt ZonedDateTime
    lastUpdatedAt ZonedDateTime
    createdBy String
    lastUpdatedBy String
}

entity Payment {
    id Long required
    paymentCode String
    paymentStatus PaymentStatus
    receivedAmount BigDecimal
    paidTime ZonedDateTime
    bankAccount String
    bankAccountHolder String
    bankInfo String
    createdAt ZonedDateTime
    lastUpdatedAt ZonedDateTime
    createdBy String
    lastUpdatedBy String
}
entity Transaction {
    id Long required
    transactionType TransactionType
    transactionDate ZonedDateTime
    amount BigDecimal
    paymentMethod PaymentMethod
    createdAt ZonedDateTime
    lastUpdatedAt ZonedDateTime
    createdBy String
    lastUpdatedBy String

}
entity BankAccount {
    id Long required
    account String
    fullName String
    bankInfo String
    createdAt ZonedDateTime
    lastUpdatedAt ZonedDateTime
    createdBy String
    lastUpdatedBy String
}

enum PaymentMethod {
    BANK_TRANSFER, CASH
}
enum PaymentStatus {
    PENDING, PART_RECEIVED, FULL_RECEIVED, REFUNDED
}

enum TransactionType {
    DEPOSIT, PARTIAL, FULL
}
enum OrderStatus {
   PENDING, CONFIRMED, DEPOSITED, PAID, CANCELED
}
enum DeliveryStatus {
	INIT, PICKED_UP, ON_BOARDING, ARRIVED, SENDING, DONE
}

entity OrderTracking {
	id Long required
    deliveryStatus DeliveryStatus
    dateTime ZonedDateTime
    remark String
  	createdAt ZonedDateTime
    lastUpdatedAt ZonedDateTime
    createdBy String
    lastUpdatedBy String

}
entity OrderLineItem {
	id Long required
    referenceUrl String required
    originPrice BigDecimal
    salePrice BigDecimal
    tax	BigDecimal
    totalPay BigDecimal
    goodsName String
    goodsId String
    goodsSKU String
    size String
    quantity Integer
    remark String
    images Blob
    source OrderSource
}

enum OrderSource {
   AEO_JP, ABC_MART
}
entity ShippingAddress {
	id Long required
    address1 String
    address2 String
    phone1 String
    phone2 String
    email String
    zipCode String
    city String
    district String
    defaultAddress Boolean
    createdAt ZonedDateTime
    lastUpdatedAt ZonedDateTime
    createdBy String
    lastUpdatedBy String
}

entity ExchangeRate {
  id String required
  rate BigDecimal
  createdAt ZonedDateTime
  lastUpdatedAt ZonedDateTime
  createdBy String
  lastUpdatedBy String
}

relationship OneToOne {
    Order {payment} to Payment
    Payment {order} to Order
}
relationship ManyToOne {
	Order {user} to User
    Order {merchant} to User
    ShippingAddress {user} to User
}
relationship OneToMany {
	Order {orderLineItems} to OrderLineItem,
    Order {orderTrackings} to OrderTracking,
    Payment {transactions} to Transaction
}


// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
